(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{205:function(t,a,e){"use strict";e.r(a);var i=e(0),s=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"git-学习记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-学习记录","aria-hidden":"true"}},[t._v("#")]),t._v(" git 学习记录")]),e("h2",{attrs:{id:"git-简单配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-简单配置","aria-hidden":"true"}},[t._v("#")]),t._v(" git 简单配置")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git config --global user.name 'your_name'\n$ git config --global user.email 'your_email@domain.com'\n")])])]),e("h3",{attrs:{id:"config-的三个作用域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config-的三个作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" config 的三个作用域")]),e("h4",{attrs:{id:"缺省等于-local"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺省等于-local","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺省等于 local")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git config --local # 只对某个仓库有效\n$ git config --global # 对当前用户所有仓库有效\n$ git config --system # 对系统所有登录的用户有效\n")])])]),e("h4",{attrs:{id:"显示-config-的配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示-config-的配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 显示 config 的配置")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git config --list [--local | --global | --system]\n")])])]),e("h2",{attrs:{id:"git-新建仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-新建仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" git 新建仓库")]),e("h3",{attrs:{id:"_1-把已有的项目代码纳入-git-管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-把已有的项目代码纳入-git-管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 把已有的项目代码纳入 git 管理")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ cd 项目代码所在文件夹\n$ git init\n")])])]),e("h3",{attrs:{id:"_2-新建的项目直接用-git-管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-新建的项目直接用-git-管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 新建的项目直接用 git 管理")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ cd 某个文件夹\n$ git init your_project # 会在当前路径下创建和项目名称同名的文件夹\n$ cd your_project\n")])])]),e("h2",{attrs:{id:"git-本地目录-暂存区-历史记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-本地目录-暂存区-历史记录","aria-hidden":"true"}},[t._v("#")]),t._v(" git 本地目录 => 暂存区 => 历史记录")]),e("p",[e("code",[t._v("git add [files]")]),t._v(": 将本地目录文件添加至暂存区")]),e("p",[e("code",[t._v("git add -u")]),t._v(": 将当前已被 git 管理的文件并且已经修改的文件进行添加至暂存区")]),e("p",[e("code",[t._v("git status")]),t._v(": 查看当前文件下的状态")]),e("p",[e("code",[t._v("git commit -m 'message'")]),t._v(": 将暂存区文件，提交为历史记录")]),e("p",[e("code",[t._v("git log")]),t._v(": 查看 git 版本历史记录")]),e("h2",{attrs:{id:"git-修改文件命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-修改文件命名","aria-hidden":"true"}},[t._v("#")]),t._v(" git 修改文件命名")]),e("p",[t._v("常规操作")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mv readme readme.md\ngit rm readme\ngit add readme.md\n")])])]),e("p",[t._v("git 操作")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git mv readme readme.md\n")])])]),e("h2",{attrs:{id:"git-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-分支","aria-hidden":"true"}},[t._v("#")]),t._v(" git 分支")]),e("p",[e("code",[t._v("git brach -v")]),t._v(": 查看当前本地分支")]),e("p",[e("code",[t._v("git checkout -b [brach name] [id]")])]),e("h2",{attrs:{id:"git-log-操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log-操作","aria-hidden":"true"}},[t._v("#")]),t._v(" git log 操作")]),e("p",[e("code",[t._v("git log --oneline")]),t._v(": 简洁查看历史记录，每次提交的 message")]),e("p",[e("code",[t._v("git log -n[n]")]),t._v(": 查看最近几次的 log 信息，随意输入数字查看几条信息等")]),e("p",[e("code",[t._v("git log --all")]),t._v(": 查看当前所有分支下的 log 记录")]),e("p",[e("code",[t._v("git log --graph")]),t._v(": 图形化查看 log 记录")]),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),e("p",[t._v("以上几种用法可以互相组合使用")])]),e("p",[e("code",[t._v("git help --web log")]),t._v(": 接口文档")]),e("h2",{attrs:{id:"git-图形界面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-图形界面","aria-hidden":"true"}},[t._v("#")]),t._v(" git 图形界面")]),e("p",[e("code",[t._v("gitk")]),t._v(": 显示图形界面")]),e("h2",{attrs:{id:"git-查看类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-查看类型","aria-hidden":"true"}},[t._v("#")]),t._v(" git 查看类型")]),e("p",[e("code",[t._v("git cat-file -t [id]")]),t._v(": 查看当前类型")])])}],!1,null,null,null);a.default=s.exports}}]);