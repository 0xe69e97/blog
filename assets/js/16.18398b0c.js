(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{185:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object","aria-hidden":"true"}},[t._v("#")]),t._v(" Object")]),s("h2",{attrs:{id:"constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor","aria-hidden":"true"}},[t._v("#")]),t._v(" Constructor")]),s("p",[t._v("保存着用于创建当前对象的函数。"),s("code",[t._v("new Object()")]),t._v("构造函数（constructor）就是Object()")]),s("h2",{attrs:{id:"hasownproperty-propertyname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasownproperty-propertyname","aria-hidden":"true"}},[t._v("#")]),t._v(" hasOwnProperty(propertyName)")]),s("p",[t._v('用于检查给定的属性在当前对象实例中（而不是在实例的原型中）是否存在。其中，作为参数的属性名（propertyName）必须以字符串形式指定（例如：o.hasOwnProperty("name")）。')]),s("h2",{attrs:{id:"isprototypeof-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isprototypeof-object","aria-hidden":"true"}},[t._v("#")]),t._v(" isPrototypeOf(object)")]),s("p",[t._v("用于检查传入的对象是否是另一个对象的原型（第5章将讨论原型）。")]),s("h2",{attrs:{id:"propertyisenumerable-propertyname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#propertyisenumerable-propertyname","aria-hidden":"true"}},[t._v("#")]),t._v(" propertyIsEnumerable(propertyName)")]),s("p",[t._v("用于检查给定的属性是否能够使用for-in语句（本章后面将会讨论）来枚举。与hasOwnProperty()方法一样，作为参数的属性名必须以字符串形式指定。")]),s("h2",{attrs:{id:"tolocalestring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tolocalestring","aria-hidden":"true"}},[t._v("#")]),t._v(" toLocaleString()")]),s("p",[t._v("返回对象的字符串表示，该字符串与执行环境的地区对应。")]),s("h2",{attrs:{id:"tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring","aria-hidden":"true"}},[t._v("#")]),t._v(" toString()")]),s("p",[t._v("返回对象的字符串表示。")]),s("h2",{attrs:{id:"valueof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueof","aria-hidden":"true"}},[t._v("#")]),t._v(" valueOf()")]),s("p",[t._v("返回对象的字符串、数值或布尔值表示。通常与toString()方法的返回值")]),s("h2",{attrs:{id:"object-defineproperty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperty","aria-hidden":"true"}},[t._v("#")]),t._v(" Object.defineProperty()")]),s("p",[s("code",[t._v("Object")]),t._v(" 的高级用法，Vue 2.X 的数据双向绑定，就是以这个方法来定义的。")]),s("p",[t._v("一般接收三个参数(obj, key, config)")]),s("ol",[s("li",[t._v("obj: 要设置的对象实例")]),s("li",[t._v("key: 要设置对象实例下的字段名 "),s("code",[t._v("key")])]),s("li",[t._v("config: 一般以对象形式书写，有以下3个参数还有2个与其互斥的参数 "),s("code",[t._v("get set")])])]),s("p",[t._v("(1)"),s("code",[t._v("configurable")]),t._v(": 表示能否通过delete删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性修改为数据属性。对于直接在对象上定义的属性，这个特性的默认值为true。")]),s("p",[t._v("(2)"),s("code",[t._v("enumerable")]),t._v(": 表示能否通过for-in循环返回属性。对于直接在对象上定义的属性，这个特性的默认值为true。")]),s("p",[t._v("(3)"),s("code",[t._v("writable")]),t._v(": 是否可写，默认为 "),s("code",[t._v("true")])]),s("h4",{attrs:{id:"互斥参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#互斥参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 互斥参数")]),s("p",[t._v("(1)"),s("code",[t._v("get")]),t._v(": 在读取属性时调用的函数。默认值为undefined。")]),s("p",[t._v("(2)"),s("code",[t._v("set")]),t._v(": 在写入属性时调用的函数。默认值为undefined。")]),s("p",[t._v("如下")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"name"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    configurable"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("false")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    value"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Nicholas"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("alert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{attrs:{class:"token comment"}},[t._v('//"Nicholas"')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" person"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("alert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{attrs:{class:"token comment"}},[t._v('//"Nicholas"')]),t._v("\n")])])])])}],!1,null,null,null);a.default=n.exports}}]);